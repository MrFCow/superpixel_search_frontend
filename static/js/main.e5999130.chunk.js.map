{"version":3,"sources":["contexts/dataCtx.js","contexts/debugMsgCtx.js","components/inputFileField.js","components/canvas/imageCanvas.js","components/canvas/superPixCanvas.js","components/canvas/resultCanvas.js","utils/queryPinterest.js","components/search/resultPopup.js","components/search/resultGrid.js","components/search/resultContainer.js","components/mainContainer.js","config/config.js","components/debugMsg.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","useData","context","useContext","Error","DataProvider","props","useState","data","setData","updateData","newData","prevDataState","value","useMemo","Provider","DebugMsgContext","useDebugMsg","DebugMsgProvider","debugMsg","setDebugMsg","appendDebugMsg","msg","prevMsgState","InputFileField","isLoading","setIsLoading","fileInput","createRef","handleLoad","useCallback","prefix","fileToUpload","current","files","fileReader","FileReader","onloadstart","a","name","onloadend","base64Result","result","dataUrlStripped","split","dataUrl","onerror","e","console","error","readAsDataURL","type","id","ref","onChange","disabled","useStyles","makeStyles","canvasRoot","height","ImageCanvas","classes","canvasRef","useRef","updateTfTensor","imageTensor","tf","fromPixels","shape","err","updateCanvasAndTfTensor","ctx","getContext","image","Image","onload","canvas","width","drawImage","canvasBoundingRect","getBoundingClientRect","canvasBase64","toDataURL","canvasW","canvasH","canvasX","x","canvasY","y","canvasDataUrl","canvasDataUrlStripped","src","useEffect","className","alt","axiosRetry","axios","retries","position","left","opacity","alpha","base64Image","noSegments","sigma","postData","method","url","timeout","prepareTfSegments","segmentTensor","inputMax","max","inputMin","min","normalizedInputs","sub","div","mul","expandedInputs","expandDims","kernel","imgH","imgW","edgeResult","layers","conv2d","kernelSize","filters","strides","useBias","padding","inputShape","weights","predict","edgeMask","toInt","squeeze","zeroChannels","SuperPixelCanvas","setAlpha","maskSelectedValue","Set","canvasTensor","canvasMaskTensor","canvasMaskRef","transformFn","bind","useGesture","onDrag","down","event","xy","preventDefault","log","toFixed","onClick","clientX","clientY","then","v","mask","segment","valueSelected","valueHitMask","equal","logicalXor","maskTensor","logicalNot","delete","add","printTensor","toFloat","toPixels","onMouseEnter","onMouseLeave","transform","processAndDrawSegments","segments","superpixels","toBool","centroids","globalAlpha","map","centroid","idx","cy","cx","fillStyle","font","fillText","fillRect","clearRect","getSuperPixel","style","zIndex","ResultCanvas","searchHeaders","formData","authority","_boundary","accept","cors","headers","theme","root","maxWidth","backdrop","drawer","color","ResultPopUp","open","setOpen","item","image_square_url","Backdrop","Card","CardMedia","component","image_large_url","CardContent","Typography","description","domain","Link","href","link","display","flexWrap","overflow","backgroundColor","palette","background","paper","ImageGridList","resultPanal","ResultContainer","searchResult","setSearchResult","isSearching","setIsSearching","openDrawer","setOpenDrawer","Grid","xs","Button","variant","document","getElementById","toBlob","imageBlob","FormData","append","searchPinterest","resultData","catch","finally","SwipeableDrawer","anchor","onClose","margin","textAlign","marginLeft","marginRight","canvasOuterContainer","flexDirection","alignItems","canvasInnerContainer","MainContainer","Paper","container","configs","debug","top","right","maxHeight","overflowY","debugMsgItemContainer","borderWidth","borderStyle","borderColor","debugMsgIdx","paddingRight","debugMsgItem","DebugMsg","App","bottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uXAEMA,EAAcC,IAAMC,gBAE1B,SAASC,IACP,IAAMC,EAAUH,IAAMI,WAAWL,GACjC,IAAKI,EACH,MAAM,IAAIE,MAAJ,8CAER,OAAOF,EAGT,SAASG,EAAaC,GAAQ,IAAD,EACHP,IAAMQ,SAAS,IADZ,mBACpBC,EADoB,KACdC,EADc,KAErBC,EAAa,SAACC,GAClBF,GAAQ,SAAAG,GAAa,kCAASA,GAAkBD,OAE5CE,EAAQd,IAAMe,SAAQ,iBAAM,CAACN,EAAME,KAAa,CAACF,IACvD,OAAO,cAACV,EAAYiB,SAAb,aAAsBF,MAAOA,GAAWP,I,YChB3CU,EAAkBjB,IAAMC,gBAE9B,SAASiB,IACP,IAAMf,EAAUH,IAAMI,WAAWa,GACjC,IAAKd,EACH,MAAM,IAAIE,MAAJ,sDAER,OAAOF,EAGT,SAASgB,EAAiBZ,GAAQ,IAAD,EACCP,IAAMQ,SAAS,IADhB,mBACxBY,EADwB,KACdC,EADc,KAEzBC,EAAiB,SAACC,GACtBF,GAAY,SAAAG,GAAY,4BAAQA,GAAR,CAAuBD,QAE3CT,EAAQd,IAAMe,SAAQ,iBAAM,CAACK,EAAUE,KAAiB,CAACF,IAC/D,OAAO,cAACH,EAAgBD,SAAjB,aAA0BF,MAAOA,GAAWP,ICZtC,SAASkB,EAAelB,GAAO,IAAD,EACVC,oBAAS,GADC,mBACrCkB,EADqC,KAC1BC,EAD0B,OAErBzB,IAAdS,EAFmC,sBAGjBO,IAAlBI,EAHmC,oBAItCM,EAAY5B,IAAM6B,YAElBC,EAAaC,uBAAa,WAC/B,IAAMC,EAAO,gBACPC,EAAeL,EAAUM,QAAQC,MAAM,GAEvCC,EAAa,IAAIC,WAEvBD,EAAWE,YAAX,sBAAyB,sBAAAC,EAAA,sDACxBZ,GAAa,GACbL,EAAe,GAAD,OAAIU,EAAJ,mCAAqCC,EAAaO,OAFxC,2CAKzBJ,EAAWK,UAAX,sBAAuB,gCAAAF,EAAA,sDAChBG,EAAeN,EAAWO,OAC1BC,EAFgB,UAEEF,EAAaG,MAAM,YAFrB,aAEE,EAA0B,GAClDlC,EAAW,CAACmC,QAASJ,EAAcE,gBAAiBA,IACpDjB,GAAa,GACbL,EAAe,GAAD,OAAIU,EAAJ,oCAAsCC,EAAaO,OAL3C,2CAQvBJ,EAAWW,QAAU,SAAUC,GAC9BC,QAAQC,MAAMF,GACdrB,GAAa,GACbL,EAAe,SAAD,OAAUU,EAAV,6BAAqCC,EAAaO,QAIjEJ,EAAWe,cAAclB,KACvB,CAACL,IAEJ,OACC,uBAAOwB,KAAK,OAAOC,GAAG,cAAcb,KAAK,YAAYc,IAAK1B,EAAW2B,SAAUzB,EAAY0B,SAAU9B,I,YCjCjG+B,EAAYC,YAAW,CAC3BC,WAAY,CAEZC,OAAQ,UAIK,SAASC,EAAYtD,GACnC,IAAMuD,EAAUL,IACVM,EAAY/D,IAAMgE,OAAO,MAFU,EAId9C,IAAlBI,EAJgC,sBAKdpB,IALc,mBAKlCO,EALkC,KAK5BE,EAL4B,KAQnCsD,EAAiBlC,uBAAY,WAClC,IAAMC,EAAO,oBACbV,EAAe,GAAD,OAAIU,EAAJ,sBACd,IACC,IAAMkC,EAAcC,IAAWC,WAAWL,EAAU7B,SAGpD,OAFAZ,EAAe,GAAD,OAAIU,EAAJ,iCAAmCkC,EAAYG,QAEtDH,EAER,MAAMI,GACLhD,EAAe,SAAD,OAAUU,EAAV,sBACdiB,QAAQC,MAAMoB,OAKVC,EAA0BxC,uBAAY,WAC3C,IAAMC,EAAO,oBACbV,EAAe,GAAD,OAAIU,EAAJ,iCAEd,IACC,IAAMwC,EAAMT,EAAU7B,QAAQuC,WAAW,MACnCC,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WAAW,IAAD,EACxBtD,EAAe,GAAD,OAAIU,EAAJ,oBAEdwC,EAAIK,OAAOC,MA3CE,IA4CbN,EAAIK,OAAOjB,OA5CE,IA4COc,EAAMd,OAAgBc,EAAMI,MAChDN,EAAIO,UAAUL,EAAO,EAAG,EAAGA,EAAMI,MAAOJ,EAAMd,OAAQ,EAAG,EAAGY,EAAIK,OAAOC,MAAON,EAAIK,OAAOjB,QAEzF,IAAMM,EAAcD,IACde,EAAqBjB,EAAU7B,QAAQ+C,wBACvCC,EAAenB,EAAU7B,QAAQiD,YACvCxE,EAAW,CACVuD,YAAaA,EAGbkB,QAASJ,EAAmBF,MAC5BO,QAASL,EAAmBpB,OAC5B0B,QAASN,EAAmBO,EAC5BC,QAASR,EAAmBS,EAC5BC,cAAeR,EACfS,sBAAqB,UAAET,EAAarC,MAAM,YAArB,aAAE,EAA0B,KAElDvB,EAAe,GAAD,OAAIU,EAAJ,+CAGf0C,EAAMkB,IAAN,OAAYnF,QAAZ,IAAYA,OAAZ,EAAYA,EAAMqC,QAEnB,MAAMwB,GACLhD,EAAe,SAAD,OAAUU,EAAV,0BACdiB,QAAQC,MAAMoB,MAEd,QAAC7D,QAAD,IAACA,OAAD,EAACA,EAAMqC,UAOT,OAJA+C,qBAAU,WACTtB,MACC,QAAC9D,QAAD,IAACA,OAAD,EAACA,EAAMqC,UAGR,mCACE,qBAAKgD,UAAWhC,EAAQH,WAAxB,SACA,wBAAQL,IAAK,SAAAA,GAAG,OAAIS,EAAU7B,QAAUoB,GAAKD,GAAE,UAAK9C,EAAM8C,IAAM0C,IAAKxF,EAAMwF,U,iDC1E/EC,IAAWC,IAAO,CAAEC,QAAS,IAE7B,IAAMzC,EAAYC,YAAW,CAC3BC,WAAY,SAACpD,GAAD,MAAY,CACxBqD,OAAQ,OACRuC,SAAU,WACVC,KAAM7F,EAAM6F,OAEbvB,OAAQ,SAACtE,GAAD,MAAY,CACnB8F,QAAS9F,EAAM+F,U,4CAIjB,WAA6BC,EAAaC,EAAYC,GAAtD,iBAAAlE,EAAA,wGAEOmE,EAAW,CAChBhC,MAAO6B,EACPC,WAAYA,EACZC,MAAOA,GALT,SAQsBR,IAAM,CAC1BU,OAAQ,OACRC,IAVF,4CAWEnG,KAAMiG,EACNG,QAAS,MAZX,cAQOlE,EARP,yBAeQA,GAfR,4C,sBA2BA,SAASmE,EAAkBC,GAC1B,OAAO5C,KAAQ,WACd,IAAM6C,EAAWD,EAAcE,MACzBC,EAAWH,EAAcI,MAEzBC,EAAmBL,EAAcM,IAAIH,GAAUI,IAAIN,EAASK,IAAIH,IAAWK,IAAIpD,IAAU,MAE3FqD,EAAiBJ,EACrBI,EAAiBA,EAAeC,WAAW,GAC3CD,EAAiBrD,IAAQqD,EAAgB,CAAC,EAAG,EAAG,IAChD,IAAMlB,EAAQnC,IAAYiD,GAAkBG,IAAIpD,IAAU,MAAiBsD,WAAW,GACtFD,EAAiBrD,IAAU,CAACqD,EAAelB,GAAQ,GAInD,IAAMoB,EAASvD,IAAU,CACxB,EAAE,GAAG,GAAG,GACR,EAAE,EAAG,GAAG,GACR,EAAE,GAAG,GAAG,KACNsD,WAAW,GAAGA,WAAW,GAlBV,cAoBGL,EAAiB/C,MApBpB,GAoBXsD,EApBW,KAoBLC,EApBK,KAyBZC,EAJQ1D,IAAc,CAC3B2D,OAAQ,CAAC3D,IAAU4D,OAAO,CAACC,WAAW,EAAGC,QAAQ,EAAGC,QAAQ,EAAGC,SAAQ,EAAOC,QAAQ,OAAQC,WAAY,CAACV,EAAMC,EAAM,GAAIU,QAAQ,CAACZ,QAG5Ga,QAAQnB,EAAiBK,WAAW,GAAGA,WAAW,IAIvEe,EAAWrE,IAAW0D,EAAWY,QAAStE,IAAU,IAAIoD,IAAIpD,IAAU,MAAMsE,QAAQC,QAAQ,GAC1FC,EAAexE,IAAaiD,GAAkBK,WAAW,GAK/D,MAAO,CAACD,EAJRgB,EAAWrE,IAAU,CAACqE,EAASG,EAAaA,EAAaH,GAAW,OAQvD,SAASI,EAAiBrI,GAAO,IAAD,EACpBC,mBAAS,IADW,mBACvC8F,EADuC,KAChCuC,EADgC,KAExCC,EAAoB9E,iBAAO,IAAI+E,KAC/BC,EAAehF,iBAAO,MACtBiF,EAAmBjF,iBAAO,MAE1BD,EAAY/D,IAAMgE,OAAO,MACzBkF,EAAgBlJ,IAAMgE,OAAO,MAPW,EASnB9C,IAAlBI,EATqC,sBAUnBpB,IAVmB,mBAUvCO,EAVuC,KAUjCE,EAViC,KAYxCmD,EAAUL,EAAU,CACzB6C,MAAOA,EACPF,KAAM3F,EAAK6E,UAGN6D,EAAcpH,uBAAY,mCAAEwD,EAAF,KAAKE,EAAL,WAAY,CAACF,EAAI9E,EAAK6E,QAASG,EAAIhF,EAAK+E,WAAU,CAAC/E,EAAK6E,QAAS7E,EAAK+E,UAEhG4D,EAAOC,YAAW,CACvBC,OAAQ,YAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAsB,gBAAfC,GAAe,GAAVlE,EAAU,KAARE,EAAQ,KACrC+D,EAAME,iBACFH,GACHtG,QAAQ0G,IAAR,eAAoBpE,EAAEqE,QAAQ,GAA9B,aAAqCnE,EAAEmE,QAAQ,GAA/C,OAGFC,QAAS,SAACL,GAAW,IAAD,EACLL,EAAY,CAACK,EAAMA,MAAMM,QAASN,EAAMA,MAAMO,UADzC,mBACZxE,EADY,KACVE,EADU,KAEnBxC,QAAQ0G,IAAR,kBAAuBpE,EAAEqE,QAAQ,GAAjC,aAAwCnE,EAAEmE,QAAQ,KAIlDzF,IAAS6E,EAAa9G,QAAQ,CAACuD,EAAEF,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI9E,OAAOuJ,MAAK,SAACC,GAE1D,IAjFkBC,EAAMC,EAASC,EAiF3BtJ,EAAQmJ,EAAE,GAEhBhB,EAAiB/G,SAnFCgI,EAmFuBjB,EAAiB/G,QAnFlCiI,EAmF2CnB,EAAa9G,QAnF/CkI,EAmFwDtJ,EAlFtFqD,KAAQ,WACd,IAAMkG,EAAeF,EAAQG,MAAMnG,IAAUiG,IAC7C,OAAOF,EAAKK,WAAWF,OAoFpB,IAAMG,EAAarG,IAAS8E,EAAiB/G,QAAS,CAAC,EAAE,EAAE,GAAI,EAAE,GAAG,EAAE,IAAIuI,aAC1E9J,EAAW,CAAC6J,WAAYA,IAEpB1J,KAASgI,EAAkB5G,SAC9Be,QAAQ0G,IAAR,2BAAgC7I,IAChCgI,EAAkB5G,QAAQwI,OAAO5J,KAGjCmC,QAAQ0G,IAAR,wBAA6B7I,IAC7BgI,EAAkB5G,QAAQyI,IAAI7J,IAG/B,IAAM8J,EAAc3B,EAAiB/G,QAAQ2I,UAC7C1G,IAAW2G,SAASF,EAAa1B,EAAchH,aAIlD6I,aAAc,SAACvB,GAEdX,EAAS,KAEVmC,aAAc,SAACxB,GAEdX,EAAS,MAIX,CACCoC,UAAW9B,IAIN+B,EAAyBnJ,sBAAW,uCAAC,WAAOoJ,EAAUtG,GAAjB,yBAAAtC,EAAA,6DACpC6I,EAAcjH,IAAUgH,GADY,EAKPrE,EAAkBsE,GALX,mBAKnC5D,EALmC,KAKnBgB,EALmB,KAQ1CQ,EAAa9G,QAAUiC,IAASqD,EAAgB,CAAC,EAAE,EAAE,GAAI,EAAE,GAAG,EAAE,IAEhEyB,EAAiB/G,QAAUiC,IAAYqD,GAAgB6D,SAGrC7D,EAAeiB,QAEjCmC,EAAcpC,EAf4B,kBAiBnCrE,IAAW2G,SAASF,EAAa/F,IAjBE,2CAAD,wDAkBxC,IAEoB9C,uBAAY,SAACuJ,EAAW9G,GAC7CA,EAAI+G,YA/Ka,EAgLjBD,EAAUE,KAAI,SAACC,EAAUC,GAAO,IAAD,cACbD,EADa,GACvBE,EADuB,KACnBC,EADmB,KAE9BpH,EAAIqH,UAAY,UAChBrH,EAAIsH,KAAO,eACXtH,EAAIuH,SAAJ,UAAgBH,EAAGhC,QAAQ,GAA3B,YAAiC+B,EAAG/B,QAAQ,IAAMgC,EAAG,GAAID,EAAG,IAE5DnH,EAAIqH,UAAY,UAChBrH,EAAIwH,SAASJ,EAAGD,EAAG,EAAE,QAEpB,IAuCH,OAnCA9F,qBAAU,WACT,UAAIpF,QAAJ,IAAIA,OAAJ,EAAIA,EAAMiF,cAAc,CACvB,IAAM1D,EAAO,+BACb,IACCV,EAAe,GAAD,OAAIU,EAAJ,8BAGd,IAAMwC,EAAMT,EAAU7B,QAAQuC,WAAW,MACzCD,EAAI+G,YArMW,EAsMf/G,EAAIyH,UAAU,EAAG,EAAGxL,EAAK2E,QAAS3E,EAAK4E,S,+CAGvC6G,CAAczL,EAAKkF,sBAAuB,KAAKqE,MAAK,SAAArH,GACnDM,QAAQ0G,IAAIhH,GACZrB,EAAe,GAAD,OAAIU,EAAJ,oCAEd,IAAK,IAAD,WAC2BW,QAD3B,IAC2BA,GAD3B,UAC2BA,EAAQlC,YADnC,aAC2B,EAAcA,KAA1B0K,GADf,EACIG,UADJ,EACeH,UAClBD,EAAuBC,EAASpH,EAAU7B,SAAS8H,MAAK,eAIzD,MAAM1F,GACLhD,EAAe,SAAD,OAAUU,EAAV,iBACdiB,QAAQC,MAAMoB,OAIjB,MAAMA,GACLhD,EAAe,SAAD,OAAUU,EAAV,kBACdiB,QAAQC,MAAMoB,OAGd,QAAC7D,QAAD,IAACA,OAAD,EAACA,EAAMiF,gBAGT,qCACE,6CAAKI,UAAWhC,EAAQH,YAAgByF,KAAxC,IAAgD+C,MAAO,CAACC,OAAQ,GAAhE,SACA,wBACCtG,UAAWhC,EAAQe,OACnBvB,IAAK,SAAAA,GAAQS,EAAU7B,QAAUoB,GACjCD,GAAE,UAAK9C,EAAM8C,IAAM0C,IAAKxF,EAAMwF,SAGhC,qBAAKD,UAAWhC,EAAQH,WAAYwI,MAAO,CAACC,OAAQ,GAApD,SACC,wBACCtG,UAAWhC,EAAQe,OACnBvB,IAAK,SAAAA,GAAQ4F,EAAchH,QAAUoB,GACrCD,GAAE,UAAK9C,EAAM8C,GAAX,SAAsB0C,IAAG,UAAKxF,EAAMwF,IAAX,gBChPhC,IAAMtC,EAAYC,YAAW,CAC3BC,WAAW,CACXC,OAAQ,UAIK,SAASyI,EAAa9L,GACpC,IAAMuD,EAAUL,IACVM,EAAY/D,IAAMgE,OAAO,MAFW,EAIf9C,IAJe,uBAKfhB,KALe,mBAKnCO,EALmC,UAiB1C,OAVAoF,qBAAU,WACT,GAAIpF,EAAKyD,aAAezD,EAAK+J,WAAW,CAGvC,IAAMxB,EAAevI,EAAKyD,YAAYqD,IAAI9G,EAAK+J,WAAW/B,SAASkC,IAAIlK,EAAK+J,WAAWC,aAAahC,QAAQlB,IAAIpD,IAAU,OAE1HA,IAAW2G,SAAS9B,EAAaP,QAAS1E,EAAU7B,YAEnD,CAACzB,EAAK+J,WAAY/J,EAAKyD,cAGzB,qBAAK4B,UAAWhC,EAAQH,WAAxB,SACC,wBACCL,IAAK,SAAAA,GAAQS,EAAU7B,QAAUoB,GACjCD,GAAE,UAAK9C,EAAM8C,IAAM0C,IAAKxF,EAAMwF,Q,sBCjC5BuG,EAAgB,SAACC,GACtB,MAAO,CACNC,UAAW,oBACX,eAAe,iCAAf,OAAiDD,EAASE,WAE1DC,OAAQ,QAIJC,EAAO,uC,4CAGE,WAA+BJ,GAA/B,eAAAhK,EAAA,sEACO0D,IAAM,CAC1BU,OAAQ,MACRC,IAAI,GAAD,OAAK+F,EAAL,+DAEHC,QAASN,EAAcC,GACvB9L,KAAM8L,IANO,cACR5J,EADQ,yBASPA,GATO,4C,kGCHTc,EAAYC,KAAW,SAACmJ,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,KAMbC,SAAU,CACPZ,OAAQS,EAAMT,OAAOa,OAAS,EAC9BC,MAAO,YAII,SAASC,GAAY5M,GACnC,IAAMuD,EAAUL,IADyB,EAEjBjD,oBAAS,GAFQ,mBAElC4M,EAFkC,KAE5BC,EAF4B,KAWzC,OACC,qCACC,qBAAKzH,IAAKrF,EAAM+M,KAAKC,iBAAkBxH,IAAI,GAAG8D,QAN1B,WACnBwD,GAASD,MAMV,cAACI,EAAA,EAAD,CAAU1H,UAAWhC,EAAQkJ,SAAUI,KAAMA,EAAMvD,QAVjC,WACjBwD,GAAQ,IAST,SACC,eAACI,EAAA,EAAD,CAAM3H,UAAWhC,EAAQgJ,KAAzB,UACC,cAACY,EAAA,EAAD,CACCC,UAAU,MAEVjJ,MAAOnE,EAAM+M,KAAKM,kBAEnB,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UAAavN,EAAM+M,KAAKS,cACxB,cAACD,EAAA,EAAD,UAAavN,EAAM+M,KAAKU,SACxB,cAACC,EAAA,EAAD,CAAMC,KAAM3N,EAAM+M,KAAKa,KAAvB,SAA8B5N,EAAM+M,KAAKa,kBC5C/C,IAAM1K,GAAYC,KAAW,SAACmJ,GAAD,MAAY,CACvCC,KAAM,CACJsB,QAAS,OACTC,SAAU,OAEVC,SAAU,SACZC,gBAAiB1B,EAAM2B,QAAQC,WAAWC,MAC1C5J,MAAO,SAKM,SAAS6J,GAAcpO,GACpC,IAAMuD,EAAUL,KAEhB,OACE,qBAAKqC,UAAWhC,EAAQgJ,KAAxB,SACAvM,EAAME,KAAK+K,KAAI,SAAC8B,GACf,OAAO,cAACH,GAAD,CAAaG,KAAMA,GAAWA,EAAKjK,SCZ/C,IAAMI,GAAYC,YAAW,CAC3BkL,YAAa,KAKA,SAASC,GAAgBtO,GAAO,IAAD,EACLC,mBAAS,MADJ,mBACtCsO,EADsC,KACxBC,EADwB,OAEPvO,oBAAS,GAFF,mBAEtCwO,EAFsC,KAEzBC,EAFyB,OAGTzO,oBAAS,GAHA,mBAGtC0O,EAHsC,KAG1BC,EAH0B,KAKvCrL,EAAUL,KAL6B,EAOlBvC,IAPkB,oBAyC7C,OACC,eAACkO,EAAA,EAAD,CAAM9B,MAAI,EAAC+B,GAAI,GAAf,UACC,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAW1F,QAlCR,WACpB,IACM9F,EAAYyL,SAASC,eADR,iBAGf1L,IAAciL,IACjBC,GAAe,GAEflL,EAAU2L,QAAO,SAAAC,GAChB,IAAIpD,EAAW,IAAIqD,SACnBrD,EAASsD,OAAO,QAASF,EAAW,sBACpCpD,EAASsD,OAAO,IAAK,KACrBtD,EAASsD,OAAO,IAAK,KACrBtD,EAASsD,OAAO,IAAK,OACrBtD,EAASsD,OAAO,IAAK,OHzBV,SAAf,kCG+B0BC,CAAgBvD,GACxBvC,MAAK,SAAA+F,GAClBhB,EAAgBgB,EAAWtP,MAC3B0O,GAAc,MACZa,OAAM,SAAA1L,GACRrB,QAAQC,MAAMoB,MACZ2L,SAAQ,WACVhB,GAAe,WAQiCzL,SAAUwL,EAA5D,oBACA,cAACkB,EAAA,EAAD,CAAiBC,OAAO,OAAO/C,KAAM8B,EACpCkB,QAAS,kBAAIjB,GAAc,IAC3BrJ,UAAWhC,EAAQ8K,YAFpB,SAIC,cAACD,GAAD,CAAelO,MAAkB,OAAZqO,QAAY,IAAZA,OAAA,EAAAA,EAAcrO,OAAQ,UCrD/C,IAAMgD,GAAYC,YAAW,CAC3BoJ,KAAM,CAENuD,OAAQ,GACRjI,QAAQ,GACRtD,MAAO,MACPwL,UAAW,SACXC,WAAY,OACZC,YAAa,QAEdC,qBAAsB,CACrBrC,QAAS,OACTsC,cAAe,SACfC,WAAY,SACZvI,QAAQ,IAETwI,qBAAqB,CACpBxC,QAAQ,OACRsC,cAAc,SAID,SAASG,GAActQ,GACrC,IAAMuD,EAAUL,KAEhB,OACC,eAACqN,EAAA,EAAD,CAAOhL,UAAWhC,EAAQgJ,KAA1B,UACC,eAACsC,EAAA,EAAD,CAAM2B,WAAS,EAAf,UACC,cAAC3B,EAAA,EAAD,CAAM9B,MAAI,EAAC+B,GAAI,GAAf,SACC,cAAC5N,EAAD,MAED,eAAC2N,EAAA,EAAD,CAAM9B,MAAI,EAAC+B,GAAI,GAAIvJ,UAAWhC,EAAQ2M,qBAAtC,UACC,eAACrB,EAAA,EAAD,CAAM9B,MAAI,EAAC+B,GAAI,GAAIvJ,UAAWhC,EAAQ8M,qBAAtC,UACC,cAAC/M,EAAD,CAAaR,GAAG,eAAe0C,IAAI,iBACnC,cAACsG,EAAD,CAAchJ,GAAG,gBAAgB0C,IAAI,qBAEtC,cAAC6C,EAAD,CAAkBvF,GAAG,iBAAiB0C,IAAI,6BAG5C,cAAC8I,GAAD,OCnDI,IAAMmC,IACA,ECKPvN,GAAYC,YAAW,CAC3BuN,MAAO,CACP9K,SAAU,QACVoI,gBAAiB,oBACf2C,IAAK,EACLC,MAAO,EACTC,UAAW,OACXC,UAAW,SACX,uBAAuB,CACtBvM,MAAO,IAER,6BAA6B,CAC5B2J,WAAY,sBAGd6C,sBAAuB,CACtBC,YAAa,kBACbC,YAAa,SACbC,YAAa,mBACbrJ,QAAS,EACTgG,QAAQ,OACRsC,cAAc,MACd,eAAe,CACdc,YAAa,SAGfE,YAAY,CACX5M,MAAO,GACPwL,UAAW,QACXqB,aAAc,GAEfC,aAAa,CACZ9M,MAAO,OAIM,SAAS+M,GAAStR,GAChC,IAAMuD,EAAUL,KADsB,EAEnBvC,IAAZE,EAF+B,oBAItC,OACC,mCACE4P,GAAqB,qBAAKlL,UAAWhC,EAAQmN,MAAxB,SAIpB7P,EAASoK,KAAK,SAAC8B,EAAM5B,GACrB,OACC,sBAAK5F,UAAWhC,EAAQwN,sBAAxB,UACC,sBAAMxL,UAAWhC,EAAQ4N,YAAzB,mBAA6DhG,EAAI,EAAjE,qBAAkDA,IAClD,sBAAM5F,UAAWhC,EAAQ8N,aAAzB,SAA4DtE,GAA5D,eAAoD5B,MAFrD,oBAAiEA,SAM3D,OCjCGoG,OAhBf,WACE,OACE,qCAEE,eAAC3Q,EAAD,WACE,cAACb,EAAD,UACE,cAACuQ,GAAD,MAGF,cAACgB,GAAD,OAEF,cAAC,IAAD,CAAUzL,KAAK,OAAO8K,IAAI,OAAOC,MAAO,EAAGY,OAAQ,QCV1CC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlI,MAAK,YAAkD,IAA/CmI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFlD,SAASC,eAAe,SAM1BuC,O","file":"static/js/main.e5999130.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataContext = React.createContext();\r\n\r\nfunction useData() {\r\n  const context = React.useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error(`useData must be used within a DataProvider`)\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction DataProvider(props) {\r\n  const [data, setData] = React.useState({}); // empty object\r\n  const updateData = (newData) => {\r\n    setData(prevDataState => ({...prevDataState, ...newData}));\r\n  }\r\n  const value = React.useMemo(() => [data, updateData], [data])\r\n  return <DataContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport {DataProvider, useData}","import React from \"react\";\r\n\r\nconst DebugMsgContext = React.createContext();\r\n\r\nfunction useDebugMsg() {\r\n  const context = React.useContext(DebugMsgContext);\r\n  if (!context) {\r\n    throw new Error(`useDebugMsg must be used within a DebugMsgProvider`)\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction DebugMsgProvider(props) {\r\n  const [debugMsg, setDebugMsg] = React.useState([]); // list of strings in message\r\n  const appendDebugMsg = (msg) => {\r\n    setDebugMsg(prevMsgState => [...prevMsgState , msg]);\r\n  }\r\n  const value = React.useMemo(() => [debugMsg, appendDebugMsg], [debugMsg])\r\n  return <DebugMsgContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport {DebugMsgProvider, useDebugMsg}","import React, { useCallback, useState } from \"react\";\r\n\r\nimport {useData} from \"../contexts/dataCtx\";\r\nimport {useDebugMsg} from \"../contexts/debugMsgCtx\";\r\n\r\n\r\nexport default function InputFileField(props){\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [, updateData] = useData();\r\n\tconst [, appendDebugMsg] = useDebugMsg();\r\n\tconst fileInput = React.createRef();\r\n\r\n\tconst handleLoad = useCallback( () => {\r\n\t\tconst prefix=\"[Input Field]\";\r\n\t\tconst fileToUpload = fileInput.current.files[0];\r\n\r\n\t\tconst fileReader = new FileReader();\r\n\r\n\t\tfileReader.onloadstart = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tappendDebugMsg(`${prefix} - Start Image Loading: ${fileToUpload.name}`);\r\n\t\t}\r\n\r\n\t\tfileReader.onloadend = async () => {\r\n\t\t\tconst base64Result = fileReader.result;\r\n\t\t\tconst dataUrlStripped = base64Result.split(\",\")?.[1];\r\n\t\t\tupdateData({dataUrl: base64Result, dataUrlStripped: dataUrlStripped});\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tappendDebugMsg(`${prefix} - Finish Image Loading: ${fileToUpload.name}`);\r\n\t\t}\r\n\r\n\t\tfileReader.onerror = function (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tappendDebugMsg(`(ERR) ${prefix} - Image Loading: ${fileToUpload.name}`);\r\n\t\t};\r\n\r\n\t\t// Read content - base 64\r\n\t\tfileReader.readAsDataURL(fileToUpload);\r\n\t}, [fileInput]);\r\n\r\n\treturn (\t\t\r\n\t\t<input type=\"file\" id=\"image_input\" name=\"Load File\" ref={fileInput} onChange={handleLoad} disabled={isLoading}/>\r\n\t)\r\n};","import React, { useEffect, useLayoutEffect, useCallback } from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nimport {useData} from \"../../contexts/dataCtx\";\r\nimport {useDebugMsg} from \"../../contexts/debugMsgCtx\";\r\n\r\nconst maxWidth = 300;\r\n\r\nconst useStyles = makeStyles({\r\n  canvasRoot: {\r\n\t\t// position: \"absolute\", // do not use absolute here to make parent container know the height, while the overlay canvas use absolute to overlay\r\n\t\theight: \"auto\",\r\n\t},\r\n});\r\n\r\nexport default function ImageCanvas(props){\r\n\tconst classes = useStyles();\r\n\tconst canvasRef = React.useRef(null);\r\n\r\n\tconst [, appendDebugMsg] = useDebugMsg();\r\n\tconst [data, updateData] = useData();\r\n\r\n\t// update from canvas a TF tensor to DataProvider, note that the tensor is with shape (y,x,channel) due to canvas layout (?)\r\n\tconst updateTfTensor = useCallback(()=>{\r\n\t\tconst prefix=\"[Canvas Effect 2]\";\r\n\t\tappendDebugMsg(`${prefix} - Canvas Changed`);\r\n\t\ttry{\r\n\t\t\tconst imageTensor = tf.browser.fromPixels(canvasRef.current);\r\n\t\t\tappendDebugMsg(`${prefix} - Tensor with shape: ${imageTensor.shape}`);\r\n\r\n\t\t\treturn imageTensor;\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tappendDebugMsg(`(ERR) ${prefix} - Canvas Changed`);\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t})\r\n\r\n\t// when image update, draw on canvas, and then update TF tensor by calling \"updateTfTensor\"\r\n\tconst updateCanvasAndTfTensor = useCallback(()=>{\r\n\t\tconst prefix=\"[Canvas Effect 1]\";\r\n\t\tappendDebugMsg(`${prefix} - Image Data Changed Effect`);\r\n\t\t// load data to canvas\r\n\t\ttry{\r\n\t\t\tconst ctx = canvasRef.current.getContext(\"2d\");\r\n\t\t\tconst image = new Image();\t\r\n\t\t\timage.onload = function(){\r\n\t\t\t\tappendDebugMsg(`${prefix} - Image onLoad`);\r\n\t\t\t\t// console.log(image.width, image.height)\r\n\t\t\t\tctx.canvas.width = maxWidth;\r\n\t\t\t\tctx.canvas.height = image.height*maxWidth/image.width;\r\n\t\t\t\tctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n\t\t\t\tconst imageTensor = updateTfTensor();\r\n\t\t\t\tconst canvasBoundingRect = canvasRef.current.getBoundingClientRect();\r\n\t\t\t\tconst canvasBase64 = canvasRef.current.toDataURL();\r\n\t\t\t\tupdateData({\r\n\t\t\t\t\timageTensor: imageTensor,\r\n\t\t\t\t\t// canvasW: ctx.canvas.width,\r\n\t\t\t\t\t// canvasH: ctx.canvas.height,\r\n\t\t\t\t\tcanvasW: canvasBoundingRect.width,\r\n\t\t\t\t\tcanvasH: canvasBoundingRect.height,\r\n\t\t\t\t\tcanvasX: canvasBoundingRect.x, // this is buggy as the windows resize would chnage the position of the canvas but is not accounted in useEffect calling this\r\n\t\t\t\t\tcanvasY: canvasBoundingRect.y, // same buggy\r\n\t\t\t\t\tcanvasDataUrl: canvasBase64,\r\n\t\t\t\t\tcanvasDataUrlStripped: canvasBase64.split(\",\")?.[1],\r\n\t\t\t\t});\r\n\t\t\t\tappendDebugMsg(`${prefix} - Update Data: TF tensor and Canvas size`);\r\n\r\n\t\t\t};\r\n\t\t\timage.src = data?.dataUrl;\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tappendDebugMsg(`(ERR) ${prefix} - Image Data Changed`);\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t},[data?.dataUrl]);\r\n\r\n\t// Draw image to canvas, then update tensor\r\n\tuseEffect(()=>{\r\n\t\tupdateCanvasAndTfTensor();\t\t\r\n\t},[data?.dataUrl])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t  <div className={classes.canvasRoot} >\r\n\t\t\t\t<canvas ref={ref => canvasRef.current = ref} id={`${props.id}`} alt={props.alt}/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, { useEffect, useLayoutEffect, useCallback, useState, useRef } from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nimport {useData} from \"../../contexts/dataCtx\";\r\nimport {useDebugMsg} from \"../../contexts/debugMsgCtx\";\r\n\r\nimport axios from \"axios\";\r\nimport axiosRetry from \"axios-retry\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport {useGesture} from \"react-use-gesture\";\r\n\r\nconst alphaValue = 1.0;\r\n\r\naxiosRetry(axios, { retries: 3 });\r\n\r\nconst useStyles = makeStyles({\r\n  canvasRoot: (props) => ({\r\n\t\theight: \"auto\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: props.left,\r\n\t}),\r\n\tcanvas: (props) => ({\r\n\t\topacity: props.alpha,\r\n\t}),\r\n});\r\n\r\nasync function getSuperPixel(base64Image, noSegments, sigma){\r\n\tconst url = `https://superpixels.herokuapp.com/process`;\r\n\tconst postData = {\r\n\t\timage: base64Image,\r\n\t\tnoSegments: noSegments,\r\n\t\tsigma: sigma,\r\n\t}\r\n\r\n\tconst result = await axios({\r\n\t\tmethod: \"post\",\r\n\t\turl: url,\r\n\t\tdata: postData,\r\n\t\ttimeout: 10000, \r\n\t});\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// mask: h,w,1, segment h,w,1, calueSelected: scalar (num, provided by onClick)\r\nfunction calculateMask(mask, segment, valueSelected){\r\n\treturn tf.tidy(()=>{\r\n\t\tconst valueHitMask = segment.equal(tf.scalar(valueSelected));\r\n\t\treturn mask.logicalXor(valueHitMask);\r\n\t});\r\n}\r\n\r\nfunction prepareTfSegments(segmentTensor){\r\n\treturn tf.tidy(()=>{\r\n\t\tconst inputMax = segmentTensor.max();\r\n\t\tconst inputMin = segmentTensor.min();\r\n\t\t// (value - min) / (max - min) * 255\r\n\t\tconst normalizedInputs = segmentTensor.sub(inputMin).div(inputMax.sub(inputMin)).mul(tf.scalar(255));\r\n\t\t// stack 3 times, then add alpha\r\n\t\tlet expandedInputs = normalizedInputs;\r\n\t\texpandedInputs = expandedInputs.expandDims(2); // h,w => h,w,1\r\n\t\texpandedInputs = tf.tile(expandedInputs, [1, 1, 3]); // repeat at last dim (channel) | h,w,1 => h,w,3\r\n\t\tconst alpha = tf.onesLike(normalizedInputs).mul(tf.scalar(255*alphaValue)).expandDims(2); // h,w => h,w,1\r\n\t\texpandedInputs = tf.concat([expandedInputs,alpha], 2); // h,w,4\r\n\r\n\t\t// tf.enableDebugMode();\r\n\t\t// edge detection\r\n\t\tconst kernel = tf.tensor([\r\n\t\t\t[-1,-1,-1],\r\n\t\t\t[-1, 8,-1],\r\n\t\t\t[-1,-1,-1]\r\n\t\t]).expandDims(2).expandDims(3);\r\n\r\n\t\tconst [imgH, imgW] = normalizedInputs.shape\r\n\t\tconst model = tf.sequential({\r\n\t\t\tlayers: [tf.layers.conv2d({kernelSize:3, filters:1, strides:1, useBias:false, padding:\"same\", inputShape: [imgH, imgW, 1], weights:[kernel]})]\r\n\t\t});\r\n\r\n\t\tconst edgeResult = model.predict(normalizedInputs.expandDims(2).expandDims(0)); // h,w => 1, h, w, 1\r\n\t\t// edgeResult.print()\r\n\t\t// tf.slice(edgeResult, [0,530,2,0], [1,1,1,1]).print();\r\n\r\n\t\tlet edgeMask = tf.greater(edgeResult.toInt(), tf.scalar(0)).mul(tf.scalar(255)).toInt().squeeze(0); // 1, h, w, 1 => h, w, 1\r\n\t\tconst zeroChannels = tf.zerosLike(normalizedInputs).expandDims(2); // h,w => h,w,1\r\n\t\tedgeMask = tf.concat([edgeMask,zeroChannels,zeroChannels,edgeMask], 2);\r\n\t\t// tf.enableProdMode();\r\n\r\n\t\t// BOTH h,w,4\r\n\t\treturn [expandedInputs, edgeMask];\r\n\t});\r\n}\r\n\r\nexport default function SuperPixelCanvas(props){\r\n\tconst [alpha, setAlpha] = useState(0.3);\r\n\tconst maskSelectedValue = useRef(new Set());\r\n\tconst canvasTensor = useRef(null);\r\n\tconst canvasMaskTensor = useRef(null);\r\n\r\n\tconst canvasRef = React.useRef(null);\r\n\tconst canvasMaskRef = React.useRef(null);\r\n\r\n\tconst [, appendDebugMsg] = useDebugMsg();\r\n\tconst [data, updateData] = useData();\r\n\r\n\tconst classes = useStyles({\r\n\t\talpha: alpha,\r\n\t\tleft: data.canvasX,\r\n\t});\r\n\r\n\tconst transformFn = useCallback(([x, y]) => [x - data.canvasX, y - data.canvasY], [data.canvasX, data.canvasY])\r\n\r\n\tconst bind = useGesture({\r\n\t\tonDrag: ({down, event, xy: [x,y]}) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (down){\r\n\t\t\t\tconsole.log(`xy: (${x.toFixed(2)}, ${y.toFixed(2)})` );\r\n\t\t\t}\r\n\t\t},\r\n\t\tonClick: (event) => {\r\n\t\t\tconst [x,y] = transformFn([event.event.clientX, event.event.clientY]);\r\n\t\t\tconsole.log(`clicked ${x.toFixed(2)}, ${y.toFixed(2)}`);\r\n\t\t\t// canvasTensor.current.print();\r\n\t\t\t// console.log(canvasTensor.current.shape) // h,w,4\r\n\t\t\t\r\n\t\t\ttf.slice(canvasTensor.current,[y,x,0],[1,1,1]).data().then((v) => {\r\n\t\t\t\t// tf.tidy( () => {\r\n\t\t\t\t\tconst value = v[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tcanvasMaskTensor.current = calculateMask(canvasMaskTensor.current, canvasTensor.current, value);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Mask from h,w,4 => h,w,3 (as data.imageTensor is h,w,3)\r\n\t\t\t\t\t// also it should be 1-mask to invert it\r\n\t\t\t\t\tconst maskTensor = tf.slice(canvasMaskTensor.current, [0,0,0], [-1,-1,3]).logicalNot();\r\n\t\t\t\t\tupdateData({maskTensor: maskTensor});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (value in maskSelectedValue.current){\r\n\t\t\t\t\t\tconsole.log(`Try delete value ${value}`)\r\n\t\t\t\t\t\tmaskSelectedValue.current.delete(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log(`Try add value ${value}`)\r\n\t\t\t\t\t\tmaskSelectedValue.current.add(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst printTensor = canvasMaskTensor.current.toFloat();\r\n\t\t\t\t\ttf.browser.toPixels(printTensor, canvasMaskRef.current);\r\n\t\t\t\t// });\r\n\t\t\t})\r\n\t\t},\r\n\t\tonMouseEnter: (event) => {\r\n\t\t\t// console.log(\"MouseEnter\");\r\n\t\t\tsetAlpha(0.8);\r\n\t\t},\r\n\t\tonMouseLeave: (event) => {\r\n\t\t\t// console.log(\"MouseLeave\");\r\n\t\t\tsetAlpha(0.3);\r\n\t\t},\r\n\t},\r\n\t//config\r\n\t{\r\n\t\ttransform: transformFn,\r\n\t}\r\n\t)\r\n\r\n\tconst processAndDrawSegments = useCallback(async (segments, canvas) => {\r\n\t\tconst superpixels = tf.tensor(segments); // shape: [h, w]\r\n\r\n\t\t// expandedInputs (h,w,4); \r\n\t\t// edgeMask (h,w,4), with Red channel only\r\n\t\tconst [expandedInputs, edgeMask] = prepareTfSegments(superpixels);\r\n\r\n\t\t// set ref for masking interaction (as side effect for other functions)\r\n\t\tcanvasTensor.current = tf.slice(expandedInputs, [0,0,0], [-1,-1,1]); // (h,w,4) => (h,w,1) => only care about the first channel\r\n\t\t// console.log(`canvasTensor.current: ${canvasTensor.current.shape}`);\r\n\t\tcanvasMaskTensor.current = tf.onesLike(expandedInputs).toBool();\r\n\r\n\t\t// Merging the patches and edge\r\n\t\tlet printTensor = expandedInputs.toInt();\r\n\t\t// printTensor = printTensor.maximum(edgeMask); // try to merge\r\n\t\tprintTensor = edgeMask; // only draw edges\r\n\r\n\t\treturn tf.browser.toPixels(printTensor, canvas); // a Promise\r\n\t},[]);\r\n\r\n\tconst drawCentroids = useCallback((centroids, ctx) => {\r\n\t\tctx.globalAlpha = alphaValue;\r\n\t\tcentroids.map((centroid, idx)=>{\r\n\t\t\tconst [cy, cx] = centroid;\r\n\t\t\tctx.fillStyle = \"#00ff00\";\r\n\t\t\tctx.font = \"15px Georgia\";\r\n\t\t\tctx.fillText(`${cx.toFixed(2)},${cy.toFixed(2)}`, cx+10, cy+25);\r\n\t\t\t// ctx.fillText(idx, cx+10, cy+25)\r\n\t\t\tctx.fillStyle = \"#ff0000\";\r\n\t\t\tctx.fillRect(cx,cy,5,5);\r\n\t\t});\r\n\t}, []);\r\n\r\n\r\n\t// Get superpixel from request and draw on canvas\r\n\tuseEffect(()=>{\r\n\t\tif (data?.canvasDataUrl){\r\n\t\t\tconst prefix=\"[SuperPixel Canvas Effect 1]\";\r\n\t\t\ttry {\r\n\t\t\t\tappendDebugMsg(`${prefix} - try call getSuperPixel`);\r\n\r\n\t\t\t\t// Clear canvas first\r\n\t\t\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\t\t\tctx.globalAlpha = alphaValue;\r\n\t\t\t\tctx.clearRect(0, 0, data.canvasW, data.canvasH);\r\n\r\n\t\t\t\t// call API, then draw\r\n\t\t\t\tgetSuperPixel(data.canvasDataUrlStripped, 100).then(result => {\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tappendDebugMsg(`${prefix} - getSuperPixel call completed`);\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst {centroids, segments} = result?.data?.data;\r\n\t\t\t\t\t\tprocessAndDrawSegments(segments,canvasRef.current).then(()=>{\r\n\t\t\t\t\t\t\t// drawCentroids(centroids, ctx);\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(err){\r\n\t\t\t\t\t\tappendDebugMsg(`(ERR) ${prefix} - Draw fail`);\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch(err){\r\n\t\t\t\tappendDebugMsg(`(ERR) ${prefix} - Superpixel`);\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [data?.canvasDataUrl]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t  <div className={classes.canvasRoot} {...bind()} style={{zIndex: 2}}>\r\n\t\t\t\t<canvas \r\n\t\t\t\t\tclassName={classes.canvas} \r\n\t\t\t\t\tref={ref => {canvasRef.current = ref}} \r\n\t\t\t\t\tid={`${props.id}`} alt={props.alt}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.canvasRoot} style={{zIndex: 1}} >\r\n\t\t\t\t<canvas \r\n\t\t\t\t\tclassName={classes.canvas} \r\n\t\t\t\t\tref={ref => {canvasMaskRef.current = ref}} \r\n\t\t\t\t\tid={`${props.id}_mask`} alt={`${props.alt} Mask`}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};","import React, { useEffect, useCallback } from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nimport {useData} from \"../../contexts/dataCtx\";\r\nimport {useDebugMsg} from \"../../contexts/debugMsgCtx\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nconst useStyles = makeStyles({\r\n  canvasRoot:{\r\n\t\theight: \"auto\",\r\n\t},\r\n});\r\n\r\nexport default function ResultCanvas(props){\r\n\tconst classes = useStyles();\r\n\tconst canvasRef = React.useRef(null);\r\n\r\n\tconst [, appendDebugMsg] = useDebugMsg();\r\n\tconst [data, updateData] = useData();\r\n\r\n\tuseEffect(()=>{\r\n\t\tif (data.imageTensor && data.maskTensor){\r\n\t\t\t// console.log(data.imageTensor.shape);\r\n\t\t\t// img * mask + (1-mask)*1\r\n\t\t\tconst canvasTensor = data.imageTensor.mul(data.maskTensor.toInt()).add(data.maskTensor.logicalNot().toInt().mul(tf.scalar(255)));\r\n\r\n\t\t\ttf.browser.toPixels(canvasTensor.toInt(), canvasRef.current);\r\n\t\t}\r\n\t}, [data.maskTensor, data.imageTensor]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.canvasRoot}>\r\n\t\t\t<canvas \r\n\t\t\t\tref={ref => {canvasRef.current = ref}} \r\n\t\t\t\tid={`${props.id}`} alt={props.alt}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n};","import axios from \"axios\";\r\n\r\nconst searchHeaders = (formData) => {\r\n\treturn {\r\n\t\tauthority: \"api.pinterest.com\",\r\n\t\t\"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\r\n\t\t// charset: \"UTF-8\",\r\n\t\taccept: \"*/*\",\r\n\t}\r\n};\r\n\r\nconst cors = \"https://cors-anywhere.herokuapp.com/\";\r\n// const cors = \"\";\r\n\r\nexport default async function searchPinterest(formData){\r\n\tconst result = await axios({\r\n\t\tmethod: \"put\",\r\n\t\turl: `${cors}https://api.pinterest.com/v3/visual_search/extension/image/`,\r\n\t\t// headers: {...searchHeaders(formData), ...formData.getHeaders()},\r\n\t\theaders: searchHeaders(formData),\r\n\t\tdata: formData,\r\n\t})\r\n\t\r\n\treturn result;\r\n};","import React, { useState } from \"react\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  // media: {\r\n  //   height: 0,\r\n  //   paddingTop: '56.25%', // 16:9\r\n\t// },\r\n\tbackdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function ResultPopUp(props){\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={props.item.image_square_url} alt=\"\" onClick={handleToggle}/>\r\n\t\t\t<Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n\t\t\t\t<Card className={classes.root}>\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t// className={classes.media}\r\n\t\t\t\t\t\timage={props.item.image_large_url}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>{props.item.description}</Typography>\r\n\t\t\t\t\t\t<Typography>{props.item.domain}</Typography>\r\n\t\t\t\t\t\t<Link href={props.item.link}>{props.item.link}</Link>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</Backdrop>\r\n\t\t</>\r\n\t)\r\n}","import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport ResultPopUp from \"./resultPopup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    // justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\twidth: 450,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ImageGridList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\t\t\t{props.data.map((item)=>{\r\n\t\t\t\t\treturn <ResultPopUp item={item} key={item.id}/>\r\n\t\t\t})}\r\n    </div>\r\n  );\r\n}","import React, {useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nimport searchPinterest from \"../../utils/queryPinterest\";\r\nimport {useDebugMsg} from \"../../contexts/debugMsgCtx\";\r\n\r\nimport ImageGridList from \"./resultGrid\";\r\n\r\nconst useStyles = makeStyles({\r\n  resultPanal: {\r\n\t\t// width: \"50%\",\r\n\t},\r\n});\r\n\r\nexport default function ResultContainer(props){\r\n\tconst [searchResult, setSearchResult] = useState(null);\r\n\tconst [isSearching, setIsSearching] = useState(false);\r\n\tconst [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst [, appendDebugMsg] = useDebugMsg();\r\n\r\n\tconst handleSearch = () => {\r\n\t\tconst canvasName = \"result_canvas\";\r\n\t\tconst canvasRef = document.getElementById(canvasName);\r\n\r\n\t\tif (canvasRef && !isSearching){\r\n\t\t\tsetIsSearching(true);\r\n\r\n\t\t\tcanvasRef.toBlob(imageBlob => {\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tformData.append(\"image\", imageBlob, \"Search Input Image\");\r\n\t\t\t\tformData.append(\"x\", \"0\");\r\n\t\t\t\tformData.append(\"y\", \"0\");\r\n\t\t\t\tformData.append(\"w\", \"1.0\");\r\n\t\t\t\tformData.append(\"h\", \"1.0\");\r\n\t\t\t\t// formData.append(\"x\", xywh.x.toString());\r\n\t\t\t\t// formData.append(\"y\", xywh.y.toString());\r\n\t\t\t\t// formData.append(\"w\", xywh.w.toString());\r\n\t\t\t\t// formData.append(\"h\", xywh.h.toString());\r\n\r\n\t\t\t\tconst resultPromise = searchPinterest(formData);\r\n\t\t\t\tresultPromise.then(resultData => {\r\n\t\t\t\t\tsetSearchResult(resultData.data);\r\n\t\t\t\t\tsetOpenDrawer(true);\r\n\t\t\t\t}).catch(err => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t}).finally(()=>{\r\n\t\t\t\t\tsetIsSearching(false);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12}>\r\n\t\t\t<Button variant=\"outlined\" onClick={handleSearch} disabled={isSearching}>Search</Button>\r\n\t\t\t<SwipeableDrawer anchor=\"left\" open={openDrawer}\r\n\t\t\t\tonClose={()=>setOpenDrawer(false)}\r\n\t\t\t\tclassName={classes.resultPanal}\r\n\t\t\t>\r\n\t\t\t\t<ImageGridList data={searchResult?.data || []}/>\r\n\t\t\t</SwipeableDrawer>\r\n\t\t</Grid>\r\n\t)\r\n};","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nimport InputFileField from \"./inputFileField\";\r\nimport ImageCanvas from \"./canvas/imageCanvas\";\r\nimport SuperPixelCanvas from \"./canvas/superPixCanvas\";\r\nimport ResultCanvas from \"./canvas/resultCanvas\";\r\nimport ResultContainer from \"./search/resultContainer\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\t\t// flexGrow:1,\r\n\t\tmargin: 20,\r\n\t\tpadding:20,\r\n\t\twidth: \"80%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginLeft: \"auto\",\r\n\t\tmarginRight: \"auto\",\r\n\t},\r\n\tcanvasOuterContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding:20,\r\n\t},\r\n\tcanvasInnerContainer:{\r\n\t\tdisplay:\"flex\", \r\n\t\tflexDirection:\"row\",\r\n\t}\r\n});\r\n\r\nexport default function MainContainer(props){\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root}>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<InputFileField/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.canvasOuterContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.canvasInnerContainer} >\r\n\t\t\t\t\t\t<ImageCanvas id=\"image_canvas\" alt=\"image canvas\"/>\r\n\t\t\t\t\t\t<ResultCanvas id=\"result_canvas\" alt=\"result canvas\"/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<SuperPixelCanvas id=\"superPixCanvas\" alt=\"super pixel canvas\"/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<ResultContainer/>\r\n\t\t</Paper>\r\n\t)\r\n}","export const configs = {\r\n\tDEBUG_MODE: false,\r\n};","import React from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport {useDebugMsg} from \"../contexts/debugMsgCtx\";\r\n\r\nimport {configs} from \"../config/config\";\r\n\r\nconst useStyles = makeStyles({\r\n  debug: {\t\t\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundColor: \"rgb(0,0,255,0.25)\",\t\r\n    top: 0,\r\n    right: 0,\r\n\t\tmaxHeight: \"100%\",\r\n\t\toverflowY: \"scroll\",\r\n\t\t\"&::-webkit-scrollbar\":{\r\n\t\t\twidth: 10,\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-thumb\":{\r\n\t\t\tbackground: \"rgba(0,0,255,0.5)\",\r\n\t\t},\r\n\t},\r\n\tdebugMsgItemContainer: {\r\n\t\tborderWidth: \"0px 0px 2px 0px\", // top, right, bottom, left \r\n\t\tborderStyle: \"dashed\",\r\n\t\tborderColor: \"rgb(0,0,255,0.5)\",\r\n\t\tpadding: 5,\r\n\t\tdisplay:\"flex\",\r\n\t\tflexDirection:\"row\",\r\n\t\t\"&:last-child\":{\r\n\t\t\tborderStyle: \"none\",\r\n\t\t}\r\n\t},\r\n\tdebugMsgIdx:{\r\n\t\twidth: 25,\r\n\t\ttextAlign: \"right\",\r\n\t\tpaddingRight: 5,\r\n\t},\r\n\tdebugMsgItem:{\r\n\t\twidth: 180,\r\n\t},\r\n});\r\n\r\nexport default function DebugMsg(props){\r\n\tconst classes = useStyles();\r\n\tconst [debugMsg] = useDebugMsg();\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{configs.DEBUG_MODE ? <div className={classes.debug}>\r\n\t\t\t\t{/* // Last 100 items only */}\r\n\t\t\t\t{/* {debugMsg.slice(Math.max(debugMsg.length - 100, 0), debugMsg.length).map( (item, idx)=>{ */}\r\n\t\t\t\t{/* // All items */}\r\n\t\t\t\t{debugMsg.map( (item, idx)=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className={classes.debugMsgItemContainer} key={`container_${idx}`}>\r\n\t\t\t\t\t\t\t<span className={classes.debugMsgIdx} key={`idx_${idx}`}>{`${idx+1}. `}</span>\r\n\t\t\t\t\t\t\t<span className={classes.debugMsgItem} key={`item_${idx}`}>{item}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div> : null}\r\n\t\t</>\r\n\t)\r\n}","import FPSStats from \"react-fps-stats\";\n\nimport MainContainer from \"./components/mainContainer\";\n\nimport {DebugMsgProvider} from \"./contexts/debugMsgCtx\";\nimport {DataProvider} from \"./contexts/dataCtx\";\n\nimport DebugMsg from \"./components/debugMsg\";\n\n// import testCode from \"./testing/testingTfjs\";\n\nfunction App() {\n  return (\n    <>\n      {/* <div onClick={testCode}>Test Tensorflow Code</div> */}\n      <DebugMsgProvider>\n        <DataProvider>\n          <MainContainer/>\n        </DataProvider>\n          \n        <DebugMsg/>\n      </DebugMsgProvider>\n      <FPSStats left=\"auto\" top=\"auto\" right={0} bottom={0}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}